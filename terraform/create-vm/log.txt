(base) denisbotuk@MacBookPro create-vm % terraform init 
Initializing the backend...

Successfully configured the backend "gcs"! Terraform will automatically
use this backend unless the backend configuration changes.
Initializing provider plugins...
- Finding latest version of hashicorp/google...
- Installing hashicorp/google v7.4.0...
- Installed hashicorp/google v7.4.0 (signed by HashiCorp)
Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
(base) denisbotuk@MacBookPro create-vm % terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # google_compute_instance.dataops_vm_instance will be created
  + resource "google_compute_instance" "dataops_vm_instance" {
      + can_ip_forward       = false
      + cpu_platform         = (known after apply)
      + creation_timestamp   = (known after apply)
      + current_status       = (known after apply)
      + deletion_protection  = false
      + effective_labels     = {
          + "goog-terraform-provisioned" = "true"
        }
      + id                   = (known after apply)
      + instance_id          = (known after apply)
      + label_fingerprint    = (known after apply)
      + machine_type         = "e2-standard-2"
      + metadata_fingerprint = (known after apply)
      + min_cpu_platform     = (known after apply)
      + name                 = "dataops-vm"
      + project              = "white-dispatch-472608-b1"
      + self_link            = (known after apply)
      + tags                 = [
          + "devops-course",
          + "ssh",
        ]
      + tags_fingerprint     = (known after apply)
      + terraform_labels     = {
          + "goog-terraform-provisioned" = "true"
        }
      + zone                 = "us-central1-c"

      + boot_disk {
          + auto_delete                = true
          + device_name                = (known after apply)
          + disk_encryption_key_sha256 = (known after apply)
          + guest_os_features          = (known after apply)
          + kms_key_self_link          = (known after apply)
          + mode                       = "READ_WRITE"
          + source                     = (known after apply)

          + initialize_params {
              + architecture           = (known after apply)
              + image                  = "centos-stream-9"
              + labels                 = (known after apply)
              + provisioned_iops       = (known after apply)
              + provisioned_throughput = (known after apply)
              + resource_policies      = (known after apply)
              + size                   = (known after apply)
              + snapshot               = (known after apply)
              + type                   = (known after apply)
            }
        }

      + confidential_instance_config (known after apply)

      + guest_accelerator (known after apply)

      + network_interface {
          + internal_ipv6_prefix_length = (known after apply)
          + ipv6_access_type            = (known after apply)
          + ipv6_address                = (known after apply)
          + name                        = (known after apply)
          + network                     = "default"
          + network_attachment          = (known after apply)
          + network_ip                  = (known after apply)
          + stack_type                  = (known after apply)
          + subnetwork                  = "default"
          + subnetwork_project          = (known after apply)

          + access_config {
              + nat_ip       = (known after apply)
              + network_tier = (known after apply)
            }
        }

      + reservation_affinity (known after apply)

      + scheduling (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run
"terraform apply" now.
(base) denisbotuk@MacBookPro create-vm % terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # google_compute_instance.dataops_vm_instance will be created
  + resource "google_compute_instance" "dataops_vm_instance" {
      + can_ip_forward       = false
      + cpu_platform         = (known after apply)
      + creation_timestamp   = (known after apply)
      + current_status       = (known after apply)
      + deletion_protection  = false
      + effective_labels     = {
          + "goog-terraform-provisioned" = "true"
        }
      + id                   = (known after apply)
      + instance_id          = (known after apply)
      + label_fingerprint    = (known after apply)
      + machine_type         = "e2-standard-2"
      + metadata_fingerprint = (known after apply)
      + min_cpu_platform     = (known after apply)
      + name                 = "dataops-vm"
      + project              = "white-dispatch-472608-b1"
      + self_link            = (known after apply)
      + tags                 = [
          + "devops-course",
          + "ssh",
        ]
      + tags_fingerprint     = (known after apply)
      + terraform_labels     = {
          + "goog-terraform-provisioned" = "true"
        }
      + zone                 = "us-central1-c"

      + boot_disk {
          + auto_delete                = true
          + device_name                = (known after apply)
          + disk_encryption_key_sha256 = (known after apply)
          + guest_os_features          = (known after apply)
          + kms_key_self_link          = (known after apply)
          + mode                       = "READ_WRITE"
          + source                     = (known after apply)

          + initialize_params {
              + architecture           = (known after apply)
              + image                  = "centos-stream-9"
              + labels                 = (known after apply)
              + provisioned_iops       = (known after apply)
              + provisioned_throughput = (known after apply)
              + resource_policies      = (known after apply)
              + size                   = (known after apply)
              + snapshot               = (known after apply)
              + type                   = (known after apply)
            }
        }

      + confidential_instance_config (known after apply)

      + guest_accelerator (known after apply)

      + network_interface {
          + internal_ipv6_prefix_length = (known after apply)
          + ipv6_access_type            = (known after apply)
          + ipv6_address                = (known after apply)
          + name                        = (known after apply)
          + network                     = "default"
          + network_attachment          = (known after apply)
          + network_ip                  = (known after apply)
          + stack_type                  = (known after apply)
          + subnetwork                  = "default"
          + subnetwork_project          = (known after apply)

          + access_config {
              + nat_ip       = (known after apply)
              + network_tier = (known after apply)
            }
        }

      + reservation_affinity (known after apply)

      + scheduling (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

google_compute_instance.dataops_vm_instance: Creating...
google_compute_instance.dataops_vm_instance: Still creating... [00m10s elapsed]
google_compute_instance.dataops_vm_instance: Still creating... [00m20s elapsed]
google_compute_instance.dataops_vm_instance: Still creating... [00m30s elapsed]
google_compute_instance.dataops_vm_instance: Still creating... [00m40s elapsed]
google_compute_instance.dataops_vm_instance: Still creating... [00m50s elapsed]
google_compute_instance.dataops_vm_instance: Still creating... [01m00s elapsed]
google_compute_instance.dataops_vm_instance: Creation complete after 1m5s [id=projects/white-dispatch-472608-b1/zones/us-central1-c/instances/dataops-vm]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
(base) denisbotuk@MacBookPro create-vm % terraform destroy
google_compute_instance.dataops_vm_instance: Refreshing state... [id=projects/white-dispatch-472608-b1/zones/us-central1-c/instances/dataops-vm]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  - destroy

Terraform will perform the following actions:

  # google_compute_instance.dataops_vm_instance will be destroyed
  - resource "google_compute_instance" "dataops_vm_instance" {
      - can_ip_forward             = false -> null
      - cpu_platform               = "Intel Broadwell" -> null
      - creation_timestamp         = "2025-09-25T13:20:48.300-07:00" -> null
      - current_status             = "RUNNING" -> null
      - deletion_protection        = false -> null
      - effective_labels           = {
          - "goog-terraform-provisioned" = "true"
        } -> null
      - enable_display             = false -> null
      - id                         = "projects/white-dispatch-472608-b1/zones/us-central1-c/instances/dataops-vm" -> null
      - instance_id                = "3730728941350558415" -> null
      - label_fingerprint          = "vezUS-42LLM=" -> null
      - labels                     = {} -> null
      - machine_type               = "e2-standard-2" -> null
      - metadata                   = {} -> null
      - metadata_fingerprint       = "zy1_q1nJ5ZA=" -> null
      - name                       = "dataops-vm" -> null
      - project                    = "white-dispatch-472608-b1" -> null
      - resource_policies          = [] -> null
      - self_link                  = "https://www.googleapis.com/compute/v1/projects/white-dispatch-472608-b1/zones/us-central1-c/instances/dataops-vm" -> null
      - tags                       = [
          - "devops-course",
          - "ssh",
        ] -> null
      - tags_fingerprint           = "bPNY2gaTSIc=" -> null
      - terraform_labels           = {
          - "goog-terraform-provisioned" = "true"
        } -> null
      - zone                       = "us-central1-c" -> null
        # (4 unchanged attributes hidden)

      - boot_disk {
          - auto_delete                     = true -> null
          - device_name                     = "persistent-disk-0" -> null
          - force_attach                    = false -> null
          - guest_os_features               = [
              - "UEFI_COMPATIBLE",
              - "VIRTIO_SCSI_MULTIQUEUE",
              - "SEV_CAPABLE",
              - "SEV_SNP_CAPABLE",
              - "SEV_LIVE_MIGRATABLE",
              - "SEV_LIVE_MIGRATABLE_V2",
              - "GVNIC",
              - "IDPF",
              - "TDX_CAPABLE",
            ] -> null
          - mode                            = "READ_WRITE" -> null
          - source                          = "https://www.googleapis.com/compute/v1/projects/white-dispatch-472608-b1/zones/us-central1-c/disks/dataops-vm" -> null
            # (6 unchanged attributes hidden)

          - initialize_params {
              - architecture                = "X86_64" -> null
              - enable_confidential_compute = false -> null
              - image                       = "https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-stream-9-v20250910" -> null
              - labels                      = {} -> null
              - provisioned_iops            = 0 -> null
              - provisioned_throughput      = 0 -> null
              - resource_manager_tags       = {} -> null
              - resource_policies           = [] -> null
              - size                        = 20 -> null
              - type                        = "pd-standard" -> null
                # (2 unchanged attributes hidden)
            }
        }

      - network_interface {
          - internal_ipv6_prefix_length = 0 -> null
          - name                        = "nic0" -> null
          - network                     = "https://www.googleapis.com/compute/v1/projects/white-dispatch-472608-b1/global/networks/default" -> null
          - network_ip                  = "10.128.0.4" -> null
          - queue_count                 = 0 -> null
          - stack_type                  = "IPV4_ONLY" -> null
          - subnetwork                  = "https://www.googleapis.com/compute/v1/projects/white-dispatch-472608-b1/regions/us-central1/subnetworks/default" -> null
          - subnetwork_project          = "white-dispatch-472608-b1" -> null
            # (4 unchanged attributes hidden)

          - access_config {
              - nat_ip                 = "34.55.189.53" -> null
              - network_tier           = "PREMIUM" -> null
                # (1 unchanged attribute hidden)
            }
        }

      - scheduling {
          - automatic_restart           = true -> null
          - availability_domain         = 0 -> null
          - min_node_cpus               = 0 -> null
          - on_host_maintenance         = "MIGRATE" -> null
          - preemptible                 = false -> null
          - provisioning_model          = "STANDARD" -> null
            # (2 unchanged attributes hidden)
        }

      - shielded_instance_config {
          - enable_integrity_monitoring = true -> null
          - enable_secure_boot          = false -> null
          - enable_vtpm                 = true -> null
        }
    }

Plan: 0 to add, 0 to change, 1 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

google_compute_instance.dataops_vm_instance: Destroying... [id=projects/white-dispatch-472608-b1/zones/us-central1-c/instances/dataops-vm]
google_compute_instance.dataops_vm_instance: Still destroying... [id=projects/white-dispatch-472608-b1/zones/us-central1-c/instances/dataops-vm, 00m10s elapsed]
google_compute_instance.dataops_vm_instance: Still destroying... [id=projects/white-dispatch-472608-b1/zones/us-central1-c/instances/dataops-vm, 00m20s elapsed]
google_compute_instance.dataops_vm_instance: Still destroying... [id=projects/white-dispatch-472608-b1/zones/us-central1-c/instances/dataops-vm, 00m30s elapsed]
google_compute_instance.dataops_vm_instance: Destruction complete after 33s

Destroy complete! Resources: 1 destroyed.
(base) denisbotuk@MacBookPro create-vm % 