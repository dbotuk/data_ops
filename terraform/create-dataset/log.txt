(base) denisbotuk@MacBookPro create-dataset % terraform init
Initializing the backend...

Successfully configured the backend "gcs"! Terraform will automatically
use this backend unless the backend configuration changes.
Initializing provider plugins...
- Finding latest version of hashicorp/google...
- Installing hashicorp/google v7.4.0...
- Installed hashicorp/google v7.4.0 (signed by HashiCorp)
Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
(base) denisbotuk@MacBookPro create-dataset % terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # google_bigquery_dataset.dataset will be created
  + resource "google_bigquery_dataset" "dataset" {
      + creation_time               = (known after apply)
      + dataset_id                  = "dataset_dataops"
      + default_collation           = (known after apply)
      + default_table_expiration_ms = 3600000
      + delete_contents_on_destroy  = false
      + effective_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                        = (known after apply)
      + id                          = (known after apply)
      + is_case_insensitive         = (known after apply)
      + last_modified_time          = (known after apply)
      + location                    = "US"
      + max_time_travel_hours       = (known after apply)
      + project                     = "white-dispatch-472608-b1"
      + self_link                   = (known after apply)
      + storage_billing_model       = (known after apply)
      + terraform_labels            = {
          + "goog-terraform-provisioned" = "true"
        }

      + access (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run
"terraform apply" now.
(base) denisbotuk@MacBookPro create-dataset % terraform apply
Acquiring state lock. This may take a few moments...

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # google_bigquery_dataset.dataset will be created
  + resource "google_bigquery_dataset" "dataset" {
      + creation_time               = (known after apply)
      + dataset_id                  = "dataset_dataops"
      + default_collation           = (known after apply)
      + default_table_expiration_ms = 3600000
      + delete_contents_on_destroy  = false
      + effective_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                        = (known after apply)
      + id                          = (known after apply)
      + is_case_insensitive         = (known after apply)
      + last_modified_time          = (known after apply)
      + location                    = "US"
      + max_time_travel_hours       = (known after apply)
      + project                     = "white-dispatch-472608-b1"
      + self_link                   = (known after apply)
      + storage_billing_model       = (known after apply)
      + terraform_labels            = {
          + "goog-terraform-provisioned" = "true"
        }

      + access (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

google_bigquery_dataset.dataset: Creating...
google_bigquery_dataset.dataset: Creation complete after 1s [id=projects/white-dispatch-472608-b1/datasets/dataset_dataops]
Releasing state lock. This may take a few moments...

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
(base) denisbotuk@MacBookPro create-dataset % terraform destroy
google_bigquery_dataset.dataset: Refreshing state... [id=projects/white-dispatch-472608-b1/datasets/dataset_dataops]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  - destroy

Terraform will perform the following actions:

  # google_bigquery_dataset.dataset will be destroyed
  - resource "google_bigquery_dataset" "dataset" {
      - creation_time                   = 1758831170466 -> null
      - dataset_id                      = "dataset_dataops" -> null
      - default_partition_expiration_ms = 0 -> null
      - default_table_expiration_ms     = 3600000 -> null
      - delete_contents_on_destroy      = false -> null
      - effective_labels                = {
          - "goog-terraform-provisioned" = "true"
        } -> null
      - etag                            = "oX/r98NJwJGpDzsan49Yug==" -> null
      - id                              = "projects/white-dispatch-472608-b1/datasets/dataset_dataops" -> null
      - is_case_insensitive             = false -> null
      - labels                          = {} -> null
      - last_modified_time              = 1758831170466 -> null
      - location                        = "US" -> null
      - max_time_travel_hours           = "168" -> null
      - project                         = "white-dispatch-472608-b1" -> null
      - resource_tags                   = {} -> null
      - self_link                       = "https://bigquery.googleapis.com/bigquery/v2/projects/white-dispatch-472608-b1/datasets/dataset_dataops" -> null
      - terraform_labels                = {
          - "goog-terraform-provisioned" = "true"
        } -> null
        # (4 unchanged attributes hidden)

      - access {
          - role           = "OWNER" -> null
          - user_by_email  = "idenisinua@gmail.com" -> null
            # (4 unchanged attributes hidden)
        }
      - access {
          - role           = "OWNER" -> null
          - special_group  = "projectOwners" -> null
            # (4 unchanged attributes hidden)
        }
      - access {
          - role           = "READER" -> null
          - special_group  = "projectReaders" -> null
            # (4 unchanged attributes hidden)
        }
      - access {
          - role           = "WRITER" -> null
          - special_group  = "projectWriters" -> null
            # (4 unchanged attributes hidden)
        }
    }

Plan: 0 to add, 0 to change, 1 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

google_bigquery_dataset.dataset: Destroying... [id=projects/white-dispatch-472608-b1/datasets/dataset_dataops]
google_bigquery_dataset.dataset: Destruction complete after 1s

Destroy complete! Resources: 1 destroyed.
(base) denisbotuk@MacBookPro create-dataset % 